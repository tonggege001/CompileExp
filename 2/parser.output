Terminals unused in grammar

   T_string
   T_intArr
   T_floatArr
   T_alloc
   T_free


State 0 conflicts: 4 shift/reduce, 1 reduce/reduce
State 7 conflicts: 4 shift/reduce, 1 reduce/reduce
State 9 conflicts: 4 shift/reduce, 1 reduce/reduce
State 10 conflicts: 3 shift/reduce
State 96 conflicts: 3 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: EXTDEFLIST

    2 EXTDEFLIST: /* empty */
    3           | FUNC EXTDEFLIST
    4           | DECLAREVALLIST EXTDEFLIST

    5 FUNC: T_func T_ID T_ls FUNC_VAR_LIST T_rs T_TYPE BODY

    6 FUNC_ARG_LIST: /* empty */
    7              | EXP FUNC_ARG

    8 FUNC_ARG: /* empty */
    9         | T_comma EXP FUNC_ARG

   10 FUNC_VAR_LIST: /* empty */
   11              | T_TYPE T_ID FUNC_VAR

   12 FUNC_VAR: /* empty */
   13         | T_comma T_TYPE T_ID FUNC_VAR

   14 T_TYPE: T_int T_lm T_cst_int T_rm
   15       | T_float T_lm T_cst_int T_rm
   16       | T_float
   17       | T_char
   18       | T_int

   19 DECLAREVALLIST: DECLAREVAL DECLAREVALLIST
   20               | /* empty */

   21 DECLAREVAL: T_TYPE T_ID T_semi
   22           | T_TYPE T_ID T_assign EXP T_semi

   23 BODY: T_lb DECLAREVALLIST STMTLIST T_rb

   24 STMTLIST: /* empty */
   25         | STMT STMTLIST

   26 STMT: BODY
   27     | EXP T_semi
   28     | T_return EXP T_semi
   29     | T_break T_semi
   30     | T_continue T_semi
   31     | IF_STMT
   32     | IF_ELSE_STMT
   33     | WHILE_STMT

   34 IF_STMT: T_if T_ls EXP T_rs STMT

   35 IF_ELSE_STMT: T_if T_ls EXP T_rs STMT T_else STMT

   36 WHILE_STMT: T_while T_ls EXP T_rs STMT

   37 CONST: T_cst_char
   38      | T_cst_int
   39      | T_cst_float

   40 EXP: CONST
   41    | T_ID
   42    | T_ls EXP T_rs
   43    | EXP T_and EXP
   44    | EXP T_assign EXP
   45    | EXP T_or EXP
   46    | EXP T_ss
   47    | EXP T_pp
   48    | T_not EXP
   49    | EXP T_land EXP
   50    | EXP T_lor EXP
   51    | T_lnot EXP
   52    | EXP T_lxor EXP
   53    | EXP T_add EXP
   54    | EXP T_sub EXP
   55    | EXP T_mul EXP
   56    | EXP T_div EXP
   57    | EXP T_equal EXP
   58    | EXP T_big EXP
   59    | EXP T_bige EXP
   60    | EXP T_small EXP
   61    | EXP T_smalle EXP
   62    | EXP T_nequal EXP
   63    | EXP T_leftmove EXP
   64    | EXP T_rightmove EXP
   65    | T_ID T_getarr EXP
   66    | T_TYPE T_ls EXP T_rs
   67    | EXP T_mod EXP
   68    | T_ID T_ls FUNC_ARG_LIST T_rs

   69 T_ID: T_identifier


Terminals, with rules where they appear

$end (0) 0
error (256)
T_int (258) 14 18
T_char (259) 17
T_float (260) 15 16
T_string (261)
T_intArr (262)
T_floatArr (263)
T_identifier (264) 69
T_func (265) 5
T_alloc (266)
T_free (267)
T_if (268) 34 35
T_else (269) 35
T_while (270) 36
T_break (271) 29
T_continue (272) 30
T_return (273) 28
T_getarr (274) 65
T_not (275) 48
T_lnot (276) 51
T_div (277) 56
T_mul (278) 55
T_mod (279) 67
T_sub (280) 54
T_add (281) 53
T_leftmove (282) 63
T_rightmove (283) 64
T_big (284) 58
T_bige (285) 59
T_small (286) 60
T_smalle (287) 61
T_equal (288) 57
T_nequal (289) 62
T_land (290) 49
T_lxor (291) 52
T_lor (292) 50
T_and (293) 43
T_or (294) 45
T_assign (295) 22 44
T_pp (296) 47
T_ss (297) 46
T_cst_int (298) 14 15 38
T_cst_float (299) 39
T_cst_char (300) 37
T_ls (301) 5 34 35 36 42 66 68
T_rs (302) 5 34 35 36 42 66 68
T_lb (303) 23
T_rb (304) 23
T_lm (305) 14 15
T_rm (306) 14 15
T_semi (307) 21 22 27 28 29 30
T_comma (308) 9 13


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
Program (55)
    on left: 1, on right: 0
EXTDEFLIST (56)
    on left: 2 3 4, on right: 1 3 4
FUNC (57)
    on left: 5, on right: 3
FUNC_ARG_LIST (58)
    on left: 6 7, on right: 68
FUNC_ARG (59)
    on left: 8 9, on right: 7 9
FUNC_VAR_LIST (60)
    on left: 10 11, on right: 5
FUNC_VAR (61)
    on left: 12 13, on right: 11 13
T_TYPE (62)
    on left: 14 15 16 17 18, on right: 5 11 13 21 22 66
DECLAREVALLIST (63)
    on left: 19 20, on right: 4 19 23
DECLAREVAL (64)
    on left: 21 22, on right: 19
BODY (65)
    on left: 23, on right: 5 26
STMTLIST (66)
    on left: 24 25, on right: 23 25
STMT (67)
    on left: 26 27 28 29 30 31 32 33, on right: 25 34 35 36
IF_STMT (68)
    on left: 34, on right: 31
IF_ELSE_STMT (69)
    on left: 35, on right: 32
WHILE_STMT (70)
    on left: 36, on right: 33
CONST (71)
    on left: 37 38 39, on right: 40
EXP (72)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 60 61 62 63 64 65 66 67 68, on right: 7 9 22 27 28 34 35
    36 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 65 66 67
T_ID (73)
    on left: 69, on right: 5 11 13 21 22 41 65 68


state 0

    0 $accept: . Program $end

    T_int    shift, and go to state 1
    T_char   shift, and go to state 2
    T_float  shift, and go to state 3
    T_func   shift, and go to state 4

    $end      reduce using rule 2 (EXTDEFLIST)
    $end      [reduce using rule 20 (DECLAREVALLIST)]
    T_int     [reduce using rule 20 (DECLAREVALLIST)]
    T_char    [reduce using rule 20 (DECLAREVALLIST)]
    T_float   [reduce using rule 20 (DECLAREVALLIST)]
    T_func    [reduce using rule 20 (DECLAREVALLIST)]
    $default  reduce using rule 2 (EXTDEFLIST)

    Program         go to state 5
    EXTDEFLIST      go to state 6
    FUNC            go to state 7
    T_TYPE          go to state 8
    DECLAREVALLIST  go to state 9
    DECLAREVAL      go to state 10


state 1

   14 T_TYPE: T_int . T_lm T_cst_int T_rm
   18       | T_int .

    T_lm  shift, and go to state 11

    $default  reduce using rule 18 (T_TYPE)


state 2

   17 T_TYPE: T_char .

    $default  reduce using rule 17 (T_TYPE)


state 3

   15 T_TYPE: T_float . T_lm T_cst_int T_rm
   16       | T_float .

    T_lm  shift, and go to state 12

    $default  reduce using rule 16 (T_TYPE)


state 4

    5 FUNC: T_func . T_ID T_ls FUNC_VAR_LIST T_rs T_TYPE BODY

    T_identifier  shift, and go to state 13

    T_ID  go to state 14


state 5

    0 $accept: Program . $end

    $end  shift, and go to state 15


state 6

    1 Program: EXTDEFLIST .

    $default  reduce using rule 1 (Program)


state 7

    3 EXTDEFLIST: FUNC . EXTDEFLIST

    T_int    shift, and go to state 1
    T_char   shift, and go to state 2
    T_float  shift, and go to state 3
    T_func   shift, and go to state 4

    $end      reduce using rule 2 (EXTDEFLIST)
    $end      [reduce using rule 20 (DECLAREVALLIST)]
    T_int     [reduce using rule 20 (DECLAREVALLIST)]
    T_char    [reduce using rule 20 (DECLAREVALLIST)]
    T_float   [reduce using rule 20 (DECLAREVALLIST)]
    T_func    [reduce using rule 20 (DECLAREVALLIST)]
    $default  reduce using rule 2 (EXTDEFLIST)

    EXTDEFLIST      go to state 16
    FUNC            go to state 7
    T_TYPE          go to state 8
    DECLAREVALLIST  go to state 9
    DECLAREVAL      go to state 10


state 8

   21 DECLAREVAL: T_TYPE . T_ID T_semi
   22           | T_TYPE . T_ID T_assign EXP T_semi

    T_identifier  shift, and go to state 13

    T_ID  go to state 17


state 9

    4 EXTDEFLIST: DECLAREVALLIST . EXTDEFLIST

    T_int    shift, and go to state 1
    T_char   shift, and go to state 2
    T_float  shift, and go to state 3
    T_func   shift, and go to state 4

    $end      reduce using rule 2 (EXTDEFLIST)
    $end      [reduce using rule 20 (DECLAREVALLIST)]
    T_int     [reduce using rule 20 (DECLAREVALLIST)]
    T_char    [reduce using rule 20 (DECLAREVALLIST)]
    T_float   [reduce using rule 20 (DECLAREVALLIST)]
    T_func    [reduce using rule 20 (DECLAREVALLIST)]
    $default  reduce using rule 2 (EXTDEFLIST)

    EXTDEFLIST      go to state 18
    FUNC            go to state 7
    T_TYPE          go to state 8
    DECLAREVALLIST  go to state 9
    DECLAREVAL      go to state 10


state 10

   19 DECLAREVALLIST: DECLAREVAL . DECLAREVALLIST

    T_int    shift, and go to state 1
    T_char   shift, and go to state 2
    T_float  shift, and go to state 3

    T_int     [reduce using rule 20 (DECLAREVALLIST)]
    T_char    [reduce using rule 20 (DECLAREVALLIST)]
    T_float   [reduce using rule 20 (DECLAREVALLIST)]
    $default  reduce using rule 20 (DECLAREVALLIST)

    T_TYPE          go to state 8
    DECLAREVALLIST  go to state 19
    DECLAREVAL      go to state 10


state 11

   14 T_TYPE: T_int T_lm . T_cst_int T_rm

    T_cst_int  shift, and go to state 20


state 12

   15 T_TYPE: T_float T_lm . T_cst_int T_rm

    T_cst_int  shift, and go to state 21


state 13

   69 T_ID: T_identifier .

    $default  reduce using rule 69 (T_ID)


state 14

    5 FUNC: T_func T_ID . T_ls FUNC_VAR_LIST T_rs T_TYPE BODY

    T_ls  shift, and go to state 22


state 15

    0 $accept: Program $end .

    $default  accept


state 16

    3 EXTDEFLIST: FUNC EXTDEFLIST .

    $default  reduce using rule 3 (EXTDEFLIST)


state 17

   21 DECLAREVAL: T_TYPE T_ID . T_semi
   22           | T_TYPE T_ID . T_assign EXP T_semi

    T_assign  shift, and go to state 23
    T_semi    shift, and go to state 24


state 18

    4 EXTDEFLIST: DECLAREVALLIST EXTDEFLIST .

    $default  reduce using rule 4 (EXTDEFLIST)


state 19

   19 DECLAREVALLIST: DECLAREVAL DECLAREVALLIST .

    $default  reduce using rule 19 (DECLAREVALLIST)


state 20

   14 T_TYPE: T_int T_lm T_cst_int . T_rm

    T_rm  shift, and go to state 25


state 21

   15 T_TYPE: T_float T_lm T_cst_int . T_rm

    T_rm  shift, and go to state 26


state 22

    5 FUNC: T_func T_ID T_ls . FUNC_VAR_LIST T_rs T_TYPE BODY

    T_int    shift, and go to state 1
    T_char   shift, and go to state 2
    T_float  shift, and go to state 3

    $default  reduce using rule 10 (FUNC_VAR_LIST)

    FUNC_VAR_LIST  go to state 27
    T_TYPE         go to state 28


state 23

   22 DECLAREVAL: T_TYPE T_ID T_assign . EXP T_semi

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 37
    T_ID    go to state 38


state 24

   21 DECLAREVAL: T_TYPE T_ID T_semi .

    $default  reduce using rule 21 (DECLAREVAL)


state 25

   14 T_TYPE: T_int T_lm T_cst_int T_rm .

    $default  reduce using rule 14 (T_TYPE)


state 26

   15 T_TYPE: T_float T_lm T_cst_int T_rm .

    $default  reduce using rule 15 (T_TYPE)


state 27

    5 FUNC: T_func T_ID T_ls FUNC_VAR_LIST . T_rs T_TYPE BODY

    T_rs  shift, and go to state 39


state 28

   11 FUNC_VAR_LIST: T_TYPE . T_ID FUNC_VAR

    T_identifier  shift, and go to state 13

    T_ID  go to state 40


state 29

   48 EXP: T_not . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 41
    T_ID    go to state 38


state 30

   51 EXP: T_lnot . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 42
    T_ID    go to state 38


state 31

   38 CONST: T_cst_int .

    $default  reduce using rule 38 (CONST)


state 32

   39 CONST: T_cst_float .

    $default  reduce using rule 39 (CONST)


state 33

   37 CONST: T_cst_char .

    $default  reduce using rule 37 (CONST)


state 34

   42 EXP: T_ls . EXP T_rs

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 43
    T_ID    go to state 38


state 35

   66 EXP: T_TYPE . T_ls EXP T_rs

    T_ls  shift, and go to state 44


state 36

   40 EXP: CONST .

    $default  reduce using rule 40 (EXP)


state 37

   22 DECLAREVAL: T_TYPE T_ID T_assign EXP . T_semi
   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_or         shift, and go to state 62
    T_assign     shift, and go to state 63
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65
    T_semi       shift, and go to state 66


state 38

   41 EXP: T_ID .
   65    | T_ID . T_getarr EXP
   68    | T_ID . T_ls FUNC_ARG_LIST T_rs

    T_getarr  shift, and go to state 67
    T_ls      shift, and go to state 68

    $default  reduce using rule 41 (EXP)


state 39

    5 FUNC: T_func T_ID T_ls FUNC_VAR_LIST T_rs . T_TYPE BODY

    T_int    shift, and go to state 1
    T_char   shift, and go to state 2
    T_float  shift, and go to state 3

    T_TYPE  go to state 69


state 40

   11 FUNC_VAR_LIST: T_TYPE T_ID . FUNC_VAR

    T_comma  shift, and go to state 70

    $default  reduce using rule 12 (FUNC_VAR)

    FUNC_VAR  go to state 71


state 41

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   48    | T_not EXP .
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_pp  shift, and go to state 64
    T_ss  shift, and go to state 65

    $default  reduce using rule 48 (EXP)


state 42

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   51    | T_lnot EXP .
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_pp  shift, and go to state 64
    T_ss  shift, and go to state 65

    $default  reduce using rule 51 (EXP)


state 43

   42 EXP: T_ls EXP . T_rs
   43    | EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_or         shift, and go to state 62
    T_assign     shift, and go to state 63
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65
    T_rs         shift, and go to state 72


state 44

   66 EXP: T_TYPE T_ls . EXP T_rs

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 73
    T_ID    go to state 38


state 45

   56 EXP: EXP T_div . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 74
    T_ID    go to state 38


state 46

   55 EXP: EXP T_mul . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 75
    T_ID    go to state 38


state 47

   67 EXP: EXP T_mod . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 76
    T_ID    go to state 38


state 48

   54 EXP: EXP T_sub . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 77
    T_ID    go to state 38


state 49

   53 EXP: EXP T_add . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 78
    T_ID    go to state 38


state 50

   63 EXP: EXP T_leftmove . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 79
    T_ID    go to state 38


state 51

   64 EXP: EXP T_rightmove . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 80
    T_ID    go to state 38


state 52

   58 EXP: EXP T_big . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 81
    T_ID    go to state 38


state 53

   59 EXP: EXP T_bige . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 82
    T_ID    go to state 38


state 54

   60 EXP: EXP T_small . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 83
    T_ID    go to state 38


state 55

   61 EXP: EXP T_smalle . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 84
    T_ID    go to state 38


state 56

   57 EXP: EXP T_equal . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 85
    T_ID    go to state 38


state 57

   62 EXP: EXP T_nequal . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 86
    T_ID    go to state 38


state 58

   49 EXP: EXP T_land . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 87
    T_ID    go to state 38


state 59

   52 EXP: EXP T_lxor . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 88
    T_ID    go to state 38


state 60

   50 EXP: EXP T_lor . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 89
    T_ID    go to state 38


state 61

   43 EXP: EXP T_and . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 90
    T_ID    go to state 38


state 62

   45 EXP: EXP T_or . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 91
    T_ID    go to state 38


state 63

   44 EXP: EXP T_assign . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 92
    T_ID    go to state 38


state 64

   47 EXP: EXP T_pp .

    $default  reduce using rule 47 (EXP)


state 65

   46 EXP: EXP T_ss .

    $default  reduce using rule 46 (EXP)


state 66

   22 DECLAREVAL: T_TYPE T_ID T_assign EXP T_semi .

    $default  reduce using rule 22 (DECLAREVAL)


state 67

   65 EXP: T_ID T_getarr . EXP

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 93
    T_ID    go to state 38


state 68

   68 EXP: T_ID T_ls . FUNC_ARG_LIST T_rs

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    $default  reduce using rule 6 (FUNC_ARG_LIST)

    FUNC_ARG_LIST  go to state 94
    T_TYPE         go to state 35
    CONST          go to state 36
    EXP            go to state 95
    T_ID           go to state 38


state 69

    5 FUNC: T_func T_ID T_ls FUNC_VAR_LIST T_rs T_TYPE . BODY

    T_lb  shift, and go to state 96

    BODY  go to state 97


state 70

   13 FUNC_VAR: T_comma . T_TYPE T_ID FUNC_VAR

    T_int    shift, and go to state 1
    T_char   shift, and go to state 2
    T_float  shift, and go to state 3

    T_TYPE  go to state 98


state 71

   11 FUNC_VAR_LIST: T_TYPE T_ID FUNC_VAR .

    $default  reduce using rule 11 (FUNC_VAR_LIST)


state 72

   42 EXP: T_ls EXP T_rs .

    $default  reduce using rule 42 (EXP)


state 73

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   66    | T_TYPE T_ls EXP . T_rs
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_or         shift, and go to state 62
    T_assign     shift, and go to state 63
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65
    T_rs         shift, and go to state 99


state 74

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   56    | EXP T_div EXP .
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_pp  shift, and go to state 64
    T_ss  shift, and go to state 65

    $default  reduce using rule 56 (EXP)


state 75

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   55    | EXP T_mul EXP .
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_pp  shift, and go to state 64
    T_ss  shift, and go to state 65

    $default  reduce using rule 55 (EXP)


state 76

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP
   67    | EXP T_mod EXP .

    T_pp  shift, and go to state 64
    T_ss  shift, and go to state 65

    $default  reduce using rule 67 (EXP)


state 77

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   54    | EXP T_sub EXP .
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div  shift, and go to state 45
    T_mul  shift, and go to state 46
    T_mod  shift, and go to state 47
    T_pp   shift, and go to state 64
    T_ss   shift, and go to state 65

    $default  reduce using rule 54 (EXP)


state 78

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   53    | EXP T_add EXP .
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div  shift, and go to state 45
    T_mul  shift, and go to state 46
    T_mod  shift, and go to state 47
    T_pp   shift, and go to state 64
    T_ss   shift, and go to state 65

    $default  reduce using rule 53 (EXP)


state 79

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   63    | EXP T_leftmove EXP .
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div  shift, and go to state 45
    T_mul  shift, and go to state 46
    T_mod  shift, and go to state 47
    T_sub  shift, and go to state 48
    T_add  shift, and go to state 49
    T_pp   shift, and go to state 64
    T_ss   shift, and go to state 65

    $default  reduce using rule 63 (EXP)


state 80

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   64    | EXP T_rightmove EXP .
   67    | EXP . T_mod EXP

    T_div  shift, and go to state 45
    T_mul  shift, and go to state 46
    T_mod  shift, and go to state 47
    T_sub  shift, and go to state 48
    T_add  shift, and go to state 49
    T_pp   shift, and go to state 64
    T_ss   shift, and go to state 65

    $default  reduce using rule 64 (EXP)


state 81

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   58    | EXP T_big EXP .
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 58 (EXP)


state 82

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   59    | EXP T_bige EXP .
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 59 (EXP)


state 83

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   60    | EXP T_small EXP .
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 60 (EXP)


state 84

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   61    | EXP T_smalle EXP .
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 61 (EXP)


state 85

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   57    | EXP T_equal EXP .
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 57 (EXP)


state 86

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   62    | EXP T_nequal EXP .
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 62 (EXP)


state 87

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   49    | EXP T_land EXP .
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 49 (EXP)


state 88

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   52    | EXP T_lxor EXP .
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 52 (EXP)


state 89

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   50    | EXP T_lor EXP .
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 50 (EXP)


state 90

   43 EXP: EXP . T_and EXP
   43    | EXP T_and EXP .
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 43 (EXP)


state 91

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   45    | EXP T_or EXP .
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 45 (EXP)


state 92

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   44    | EXP T_assign EXP .
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_or         shift, and go to state 62
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65

    $default  reduce using rule 44 (EXP)


state 93

   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   65    | T_ID T_getarr EXP .
   67    | EXP . T_mod EXP

    $default  reduce using rule 65 (EXP)


state 94

   68 EXP: T_ID T_ls FUNC_ARG_LIST . T_rs

    T_rs  shift, and go to state 100


state 95

    7 FUNC_ARG_LIST: EXP . FUNC_ARG
   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_or         shift, and go to state 62
    T_assign     shift, and go to state 63
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65
    T_comma      shift, and go to state 101

    $default  reduce using rule 8 (FUNC_ARG)

    FUNC_ARG  go to state 102


state 96

   23 BODY: T_lb . DECLAREVALLIST STMTLIST T_rb

    T_int    shift, and go to state 1
    T_char   shift, and go to state 2
    T_float  shift, and go to state 3

    T_int     [reduce using rule 20 (DECLAREVALLIST)]
    T_char    [reduce using rule 20 (DECLAREVALLIST)]
    T_float   [reduce using rule 20 (DECLAREVALLIST)]
    $default  reduce using rule 20 (DECLAREVALLIST)

    T_TYPE          go to state 8
    DECLAREVALLIST  go to state 103
    DECLAREVAL      go to state 10


state 97

    5 FUNC: T_func T_ID T_ls FUNC_VAR_LIST T_rs T_TYPE BODY .

    $default  reduce using rule 5 (FUNC)


state 98

   13 FUNC_VAR: T_comma T_TYPE . T_ID FUNC_VAR

    T_identifier  shift, and go to state 13

    T_ID  go to state 104


state 99

   66 EXP: T_TYPE T_ls EXP T_rs .

    $default  reduce using rule 66 (EXP)


state 100

   68 EXP: T_ID T_ls FUNC_ARG_LIST T_rs .

    $default  reduce using rule 68 (EXP)


state 101

    9 FUNC_ARG: T_comma . EXP FUNC_ARG

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 105
    T_ID    go to state 38


state 102

    7 FUNC_ARG_LIST: EXP FUNC_ARG .

    $default  reduce using rule 7 (FUNC_ARG_LIST)


state 103

   23 BODY: T_lb DECLAREVALLIST . STMTLIST T_rb

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_if          shift, and go to state 106
    T_while       shift, and go to state 107
    T_break       shift, and go to state 108
    T_continue    shift, and go to state 109
    T_return      shift, and go to state 110
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34
    T_lb          shift, and go to state 96

    $default  reduce using rule 24 (STMTLIST)

    T_TYPE        go to state 35
    BODY          go to state 111
    STMTLIST      go to state 112
    STMT          go to state 113
    IF_STMT       go to state 114
    IF_ELSE_STMT  go to state 115
    WHILE_STMT    go to state 116
    CONST         go to state 36
    EXP           go to state 117
    T_ID          go to state 38


state 104

   13 FUNC_VAR: T_comma T_TYPE T_ID . FUNC_VAR

    T_comma  shift, and go to state 70

    $default  reduce using rule 12 (FUNC_VAR)

    FUNC_VAR  go to state 118


state 105

    9 FUNC_ARG: T_comma EXP . FUNC_ARG
   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_or         shift, and go to state 62
    T_assign     shift, and go to state 63
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65
    T_comma      shift, and go to state 101

    $default  reduce using rule 8 (FUNC_ARG)

    FUNC_ARG  go to state 119


state 106

   34 IF_STMT: T_if . T_ls EXP T_rs STMT
   35 IF_ELSE_STMT: T_if . T_ls EXP T_rs STMT T_else STMT

    T_ls  shift, and go to state 120


state 107

   36 WHILE_STMT: T_while . T_ls EXP T_rs STMT

    T_ls  shift, and go to state 121


state 108

   29 STMT: T_break . T_semi

    T_semi  shift, and go to state 122


state 109

   30 STMT: T_continue . T_semi

    T_semi  shift, and go to state 123


state 110

   28 STMT: T_return . EXP T_semi

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 124
    T_ID    go to state 38


state 111

   26 STMT: BODY .

    $default  reduce using rule 26 (STMT)


state 112

   23 BODY: T_lb DECLAREVALLIST STMTLIST . T_rb

    T_rb  shift, and go to state 125


state 113

   25 STMTLIST: STMT . STMTLIST

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_if          shift, and go to state 106
    T_while       shift, and go to state 107
    T_break       shift, and go to state 108
    T_continue    shift, and go to state 109
    T_return      shift, and go to state 110
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34
    T_lb          shift, and go to state 96

    $default  reduce using rule 24 (STMTLIST)

    T_TYPE        go to state 35
    BODY          go to state 111
    STMTLIST      go to state 126
    STMT          go to state 113
    IF_STMT       go to state 114
    IF_ELSE_STMT  go to state 115
    WHILE_STMT    go to state 116
    CONST         go to state 36
    EXP           go to state 117
    T_ID          go to state 38


state 114

   31 STMT: IF_STMT .

    $default  reduce using rule 31 (STMT)


state 115

   32 STMT: IF_ELSE_STMT .

    $default  reduce using rule 32 (STMT)


state 116

   33 STMT: WHILE_STMT .

    $default  reduce using rule 33 (STMT)


state 117

   27 STMT: EXP . T_semi
   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_or         shift, and go to state 62
    T_assign     shift, and go to state 63
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65
    T_semi       shift, and go to state 127


state 118

   13 FUNC_VAR: T_comma T_TYPE T_ID FUNC_VAR .

    $default  reduce using rule 13 (FUNC_VAR)


state 119

    9 FUNC_ARG: T_comma EXP FUNC_ARG .

    $default  reduce using rule 9 (FUNC_ARG)


state 120

   34 IF_STMT: T_if T_ls . EXP T_rs STMT
   35 IF_ELSE_STMT: T_if T_ls . EXP T_rs STMT T_else STMT

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 128
    T_ID    go to state 38


state 121

   36 WHILE_STMT: T_while T_ls . EXP T_rs STMT

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34

    T_TYPE  go to state 35
    CONST   go to state 36
    EXP     go to state 129
    T_ID    go to state 38


state 122

   29 STMT: T_break T_semi .

    $default  reduce using rule 29 (STMT)


state 123

   30 STMT: T_continue T_semi .

    $default  reduce using rule 30 (STMT)


state 124

   28 STMT: T_return EXP . T_semi
   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_or         shift, and go to state 62
    T_assign     shift, and go to state 63
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65
    T_semi       shift, and go to state 130


state 125

   23 BODY: T_lb DECLAREVALLIST STMTLIST T_rb .

    $default  reduce using rule 23 (BODY)


state 126

   25 STMTLIST: STMT STMTLIST .

    $default  reduce using rule 25 (STMTLIST)


state 127

   27 STMT: EXP T_semi .

    $default  reduce using rule 27 (STMT)


state 128

   34 IF_STMT: T_if T_ls EXP . T_rs STMT
   35 IF_ELSE_STMT: T_if T_ls EXP . T_rs STMT T_else STMT
   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_or         shift, and go to state 62
    T_assign     shift, and go to state 63
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65
    T_rs         shift, and go to state 131


state 129

   36 WHILE_STMT: T_while T_ls EXP . T_rs STMT
   43 EXP: EXP . T_and EXP
   44    | EXP . T_assign EXP
   45    | EXP . T_or EXP
   46    | EXP . T_ss
   47    | EXP . T_pp
   49    | EXP . T_land EXP
   50    | EXP . T_lor EXP
   52    | EXP . T_lxor EXP
   53    | EXP . T_add EXP
   54    | EXP . T_sub EXP
   55    | EXP . T_mul EXP
   56    | EXP . T_div EXP
   57    | EXP . T_equal EXP
   58    | EXP . T_big EXP
   59    | EXP . T_bige EXP
   60    | EXP . T_small EXP
   61    | EXP . T_smalle EXP
   62    | EXP . T_nequal EXP
   63    | EXP . T_leftmove EXP
   64    | EXP . T_rightmove EXP
   67    | EXP . T_mod EXP

    T_div        shift, and go to state 45
    T_mul        shift, and go to state 46
    T_mod        shift, and go to state 47
    T_sub        shift, and go to state 48
    T_add        shift, and go to state 49
    T_leftmove   shift, and go to state 50
    T_rightmove  shift, and go to state 51
    T_big        shift, and go to state 52
    T_bige       shift, and go to state 53
    T_small      shift, and go to state 54
    T_smalle     shift, and go to state 55
    T_equal      shift, and go to state 56
    T_nequal     shift, and go to state 57
    T_land       shift, and go to state 58
    T_lxor       shift, and go to state 59
    T_lor        shift, and go to state 60
    T_and        shift, and go to state 61
    T_or         shift, and go to state 62
    T_assign     shift, and go to state 63
    T_pp         shift, and go to state 64
    T_ss         shift, and go to state 65
    T_rs         shift, and go to state 132


state 130

   28 STMT: T_return EXP T_semi .

    $default  reduce using rule 28 (STMT)


state 131

   34 IF_STMT: T_if T_ls EXP T_rs . STMT
   35 IF_ELSE_STMT: T_if T_ls EXP T_rs . STMT T_else STMT

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_if          shift, and go to state 106
    T_while       shift, and go to state 107
    T_break       shift, and go to state 108
    T_continue    shift, and go to state 109
    T_return      shift, and go to state 110
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34
    T_lb          shift, and go to state 96

    T_TYPE        go to state 35
    BODY          go to state 111
    STMT          go to state 133
    IF_STMT       go to state 114
    IF_ELSE_STMT  go to state 115
    WHILE_STMT    go to state 116
    CONST         go to state 36
    EXP           go to state 117
    T_ID          go to state 38


state 132

   36 WHILE_STMT: T_while T_ls EXP T_rs . STMT

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_if          shift, and go to state 106
    T_while       shift, and go to state 107
    T_break       shift, and go to state 108
    T_continue    shift, and go to state 109
    T_return      shift, and go to state 110
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34
    T_lb          shift, and go to state 96

    T_TYPE        go to state 35
    BODY          go to state 111
    STMT          go to state 134
    IF_STMT       go to state 114
    IF_ELSE_STMT  go to state 115
    WHILE_STMT    go to state 116
    CONST         go to state 36
    EXP           go to state 117
    T_ID          go to state 38


state 133

   34 IF_STMT: T_if T_ls EXP T_rs STMT .
   35 IF_ELSE_STMT: T_if T_ls EXP T_rs STMT . T_else STMT

    T_else  shift, and go to state 135

    $default  reduce using rule 34 (IF_STMT)


state 134

   36 WHILE_STMT: T_while T_ls EXP T_rs STMT .

    $default  reduce using rule 36 (WHILE_STMT)


state 135

   35 IF_ELSE_STMT: T_if T_ls EXP T_rs STMT T_else . STMT

    T_int         shift, and go to state 1
    T_char        shift, and go to state 2
    T_float       shift, and go to state 3
    T_identifier  shift, and go to state 13
    T_if          shift, and go to state 106
    T_while       shift, and go to state 107
    T_break       shift, and go to state 108
    T_continue    shift, and go to state 109
    T_return      shift, and go to state 110
    T_not         shift, and go to state 29
    T_lnot        shift, and go to state 30
    T_cst_int     shift, and go to state 31
    T_cst_float   shift, and go to state 32
    T_cst_char    shift, and go to state 33
    T_ls          shift, and go to state 34
    T_lb          shift, and go to state 96

    T_TYPE        go to state 35
    BODY          go to state 111
    STMT          go to state 136
    IF_STMT       go to state 114
    IF_ELSE_STMT  go to state 115
    WHILE_STMT    go to state 116
    CONST         go to state 36
    EXP           go to state 117
    T_ID          go to state 38


state 136

   35 IF_ELSE_STMT: T_if T_ls EXP T_rs STMT T_else STMT .

    $default  reduce using rule 35 (IF_ELSE_STMT)
